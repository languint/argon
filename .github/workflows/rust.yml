name: Rust

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  setup:
    name: Setup & Cache
    runs-on: ubuntu-latest
    outputs:
      rust-cache-key: ${{ steps.cache-key.outputs.key }}
    steps:
      - uses: actions/checkout@v4

      - name: Generate cache key
        id: cache-key
        run: echo "key=$(date +'%Y-%m')" >> $GITHUB_OUTPUT

      - name: Cache cargo registry, git, and target
        id: cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ steps.cache-key.outputs.key }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: clippy, rustfmt

  build:
    name: Build
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ needs.setup.outputs.rust-cache-key }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      - name: Build
        run: cargo build --verbose

  test:
    name: Run Tests (nextest)
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ needs.setup.outputs.rust-cache-key }}

      - name: Cache cargo-nextest binary
        id: nextest-cache
        uses: actions/cache@v4
        with:
          path: ~/.cargo/bin/cargo-nextest
          key: ${{ runner.os }}-nextest-${{ needs.setup.outputs.rust-cache-key }}
          restore-keys: |
            ${{ runner.os }}-nextest-

      - name: Install cargo-nextest
        if: steps.nextest-cache.outputs.cache-hit != 'true'
        run: cargo install cargo-nextest --locked

      - name: Run tests with nextest
        run: cargo nextest run --workspace --all-targets --no-fail-fast --verbose

  clippy:
    name: Lint (Clippy)
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ needs.setup.outputs.rust-cache-key }}
      - name: Run Clippy
        run: cargo clippy -- -D warnings

  fmt:
    name: Check Formatting
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ needs.setup.outputs.rust-cache-key }}
      - name: Check formatting
        run: cargo fmt -- --check